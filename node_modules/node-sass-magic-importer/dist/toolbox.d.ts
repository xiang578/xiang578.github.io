import { ISelectorFilter, ISelectorFilterRaw } from './interfaces/ISelectorFilter';
export declare const buildIncludePaths: (nodeSassIncludePaths: string, previouslyResolvedPath: string) => string[];
export declare const cleanImportUrl: (url: string) => string;
export declare const escapeSelector: (selector: string, escapeSequence?: string | undefined) => string;
export declare const parseNodeFilters: (url: string) => string[];
export declare const processRawSelectorFilters: (rawSelectorFilters: ISelectorFilterRaw[]) => ISelectorFilter[];
export declare const resolvePackageKey: (packageJson: object, packageKeys: string[]) => object;
export declare const sassGlobPattern: (base: string) => string;
export declare const sassUrlVariants: (url: string, extensions?: string[] | undefined) => string[];
export declare const resolveGlobUrl: (url: string, includePaths?: string[] | undefined) => string[] | null;
export declare const resolvePackageUrl: (url: string, extensions: string[], cwd: string, packageKeys: any) => string | null;
export declare const resolveUrl: (url: string, includePaths?: string[] | undefined) => string;
export declare const splitSelectorFilter: (combinedFilter: string) => ISelectorFilterRaw;
export declare const parseSelectorFilters: (url: string) => ISelectorFilter[];
